{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","activeTodoId","onClick","className","map","todo","id","userId","title","completed","type","TodoFilter","onChange","inputValue","onSelectChange","filter","value","event","target","placeholder","style","pointerEvents","Loader","TodoModal","userDetails","activeTodo","onClose","name","email","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","App","useState","setTodos","setInputValue","setFilter","isLoading","setisLoading","setActiveTodoId","initialUser","phone","setUserDetails","visibleTodos","toLowerCase","input","queryMatch","includes","a","todosFromServer","useEffect","loadDataFromServer","length","getUser","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39fbad24.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  activeTodoId: number,\n  onClick: (todoId: number, userId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos, activeTodoId, onClick }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id, userId, title, completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td>\n                <p className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClick(id, userId)}\n                >\n                  <span className=\"icon\">\n                    <i className={activeTodoId === id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  ),\n);\n","import React, { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  onChange: Dispatch<SetStateAction<string>>,\n  filter: string\n  onSelectChange: Dispatch<SetStateAction<string>>,\n  inputValue: string,\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({\n    onChange,\n    inputValue,\n    onSelectChange,\n    filter,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filter}\n              onChange={(event) => onSelectChange(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={inputValue}\n            onChange={(event) => onChange(event.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {inputValue && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onChange('')}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  activeTodo: Todo,\n  userDetails: User,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    userDetails,\n    activeTodo,\n    onClose,\n  },\n) => {\n  const { title, completed } = activeTodo;\n  const { id, name, email } = userDetails;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {id === 0\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={email}>\n                  {name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { getTodos, getUser } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [isLoading, setisLoading] = useState(true);\n  const [activeTodoId, setActiveTodoId] = useState(0);\n\n  const initialUser: User = {\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  };\n\n  const [userDetails, setUserDetails] = useState(initialUser);\n\n  const filterTodos = () => {\n    return (todos.filter(todo => {\n      const title = todo.title.toLowerCase();\n      const input = inputValue.toLowerCase();\n      const queryMatch = title.includes(input);\n\n      switch (filter) {\n        case 'active':\n          return !todo.completed && queryMatch;\n\n        case 'completed':\n          return todo.completed && queryMatch;\n\n        default:\n          return queryMatch;\n      }\n    }));\n  };\n\n  const handleClick = (id: number, userId: number) => {\n    setActiveTodoId(id);\n\n    getUser(userId).then(user => {\n      setUserDetails({\n        ...user,\n        id,\n      });\n    });\n  };\n\n  const closeUserCard = () => {\n    setUserDetails(initialUser);\n    setActiveTodoId(0);\n  };\n\n  const visibleTodos = filterTodos();\n\n  const activeTodo = todos.filter(todo => todo.id === activeTodoId)[0];\n\n  async function loadDataFromServer() {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setisLoading(false);\n  }\n\n  useEffect(() => {\n    loadDataFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectChange={setFilter}\n                filter={filter}\n                onChange={setInputValue}\n                inputValue={inputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    activeTodoId={activeTodoId}\n                    onClick={handleClick}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodoId > 0 && (\n        <TodoModal\n          activeTodo={activeTodo}\n          userDetails={userDetails}\n          onClose={closeUserCard}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}